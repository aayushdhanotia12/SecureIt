string DecryptData(string EncryptedText, string Encryptionkey)  
        {  
            RijndaelManaged objrij = new RijndaelManaged();  
            objrij.Mode = CipherMode.CBC;  
            objrij.Padding = PaddingMode.PKCS7;  
  
            objrij.KeySize = 0x80;  
            objrij.BlockSize = 0x80;  
            byte[] encryptedTextByte = Convert.FromBase64String(EncryptedText);  
            byte[] passBytes = Encoding.UTF8.GetBytes(Encryptionkey);  
            byte[] EncryptionkeyBytes = new byte[0x10];  
            int len = passBytes.Length;  
            if (len > EncryptionkeyBytes.Length)  
            {  
                len = EncryptionkeyBytes.Length;  
            }  
            Array.Copy(passBytes, EncryptionkeyBytes, len);  
            objrij.Key = EncryptionkeyBytes;  
            objrij.IV = EncryptionkeyBytes;  
            byte[] TextByte = objrij.CreateDecryptor().TransformFinalBlock(encryptedTextByte, 0, encryptedTextByte.Length);  
            return Encoding.UTF8.GetString(TextByte);  //it will return readable string  
        }   